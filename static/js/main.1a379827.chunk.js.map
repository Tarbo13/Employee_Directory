{"version":3,"sources":["FilterInput.js","Table.js","App.js","API.js","reportWebVitals.js","index.js"],"names":["FilterInput","users","updateUsers","useState","inputValue","updateInput","useEffect","filterdUsers","filter","name","first","toLowerCase","indexOf","toLocaleLowerCase","value","onChange","e","target","styles","titleFont","boxSizing","width","buttonSpacing","marginTop","Table","sortedUsers","updateSortedUsers","className","style","scope","onClick","updateSort","sort","a","b","nameA","nameB","map","location","city","state","country","postcode","thumbnail","picture","cell","phone","gender","email","last","title","src","App","initialUsers","updateAvailableUsers","usersToRender","updateUsersToRender","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a379827.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst FilterInput = ({ users, updateUsers }) => {\r\n    const [inputValue, updateInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const filterdUsers = inputValue === \"\"\r\n        ? users\r\n        : users.filter(\r\n            ({ name: { first }}) =>\r\n            first.toLowerCase().indexOf(inputValue.toLocaleLowerCase()) >= 0\r\n        );\r\n\r\n        updateUsers(filterdUsers);\r\n    }, [inputValue, users]);\r\n\r\n    return (\r\n        <input value={inputValue} onChange={e => updateInput(e.target.value)} />\r\n    );\r\n};\r\n\r\nexport default FilterInput;","import React, { useState, useEffect } from \"react\";\r\n// import './Table.css';\r\n\r\nconst styles = {\r\n    titleFont: {\r\n    //  background: \"#f4d7d7\",\r\n     boxSizing: \"border-box\",\r\n     width: \"10%\"\r\n    },\r\n    buttonSpacing: {\r\n        marginTop: \"10px\"\r\n    }}\r\n\r\n\r\nconst Table = ({ users }) => {\r\n    let [sortedUsers, updateSortedUsers] = useState([]);\r\n\r\n    useEffect(() => updateSortedUsers(users), [users]);\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n               \r\n                    <tr style={styles.titleFont}>\r\n                    \r\n                                           \r\n                        \r\n                        \r\n                        {/* <th style={styles.titleFont} scope=\"col\">title</th> */}\r\n                        <th scope=\"col\">title</th>\r\n                        <button style={styles.buttonSpacing}\r\n                        scope=\"col\"\r\n                        onClick={() => {\r\n                            const usersCopy = [...users];\r\n                            const updateSort = usersCopy.sort((a, b) => {\r\n                                const nameA = a.name.first\r\n                                const nameB = b.name.first;\r\n\r\n                                if (nameA < nameB) {\r\n                                    return -1;\r\n                                }\r\n                                if (nameA > nameB) {\r\n                                    return 1;\r\n                                }\r\n                                return 0;\r\n                            })\r\n                            updateSortedUsers(updateSort);\r\n                        }}\r\n                        >First</button> \r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">gender</th>\r\n                        <th scope=\"col\">email</th>\r\n                        <th scope=\"col\">phone</th>\r\n                        <th scope=\"col\">cell</th>\r\n                        <th scope=\"col\">city</th>\r\n                        <th scope=\"col\">state</th>\r\n                        <th scope=\"col\">country</th>\r\n                        <th scope=\"col\">postcode</th>\r\n                        <th scope=\"col\">picture</th>     \r\n                    </tr>\r\n                \r\n                <tbody>\r\n                    {sortedUsers.map(\r\n                        ({\r\n                            location: { city, state, country, postcode },\r\n                            picture: { thumbnail },\r\n                            cell,\r\n                            phone,\r\n                            gender,\r\n                            email,\r\n                            name: { first, last, title }\r\n                        }) => (\r\n                            <tr key={email}>\r\n                            <td style={styles.titleFont}>{title}</td>\r\n                            <th>{first}</th>\r\n                            <td>{last}</td>\r\n                            <td>{gender}</td>\r\n                            <td>{email}</td>\r\n                            <td>{phone}</td>\r\n                            <td>{cell}</td>\r\n                            <td>{city}</td>\r\n                            <td>{state}</td>\r\n                            <td>{country}</td>\r\n                            <td>{postcode}</td>\r\n                            \r\n                            <td>\r\n                              <img src={thumbnail} />\r\n                            </td>\r\n            \r\n                         \r\n                          </tr>\r\n                        )\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\nimport FilterInput from \"./FilterInput\";\nimport Table from \"./Table\";\nimport { getUsers } from \"./API\";\nimport './App.css';\n\nfunction App() {\nconst [initialUsers, updateAvailableUsers] = useState([]);\nconst [usersToRender, updateUsersToRender] = useState([]);\n\nuseEffect(() => {\n  getUsers().then(({data: { results }}) => updateAvailableUsers(results));\n  \n},\n []);\n \n  return (\n    <div className=\"App\">\n      <h1 className=\"App-logo\">Employee Directory</h1>\n      <p className=\"App-logo\">\n        To filter by first name, please begin your search in the user input below\n      </p>\n      <FilterInput users={initialUsers} updateUsers={updateUsersToRender} />\n      <Table users={usersToRender} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport const getUsers = function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}